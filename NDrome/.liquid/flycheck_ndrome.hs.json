{"status":"safe","types":{"15":{"31":{"ann":"[GHC.Types.Char] -> ([GHC.Types.Char], [GHC.Types.Char])","ident":"_","row":15,"col":31},"12":{"ann":"[GHC.Types.Char]","ident":"line","row":15,"col":12},"1":{"ann":"[GHC.Types.Char] -> [GHC.Types.Char]","ident":"Main.removeCRLF","row":15,"col":1},"26":{"ann":"[GHC.Types.Char]","ident":"y","row":15,"col":26},"24":{"ann":"[GHC.Types.Char]","ident":"x","row":15,"col":24},"42":{"ann":"{v : [GHC.Types.Char] | v == line && len v >= 0}","ident":"line","row":15,"col":42}},"22":{"7":{"ann":"{v : [[GHC.Types.Char]] | len v == len dromes}","ident":"tested","row":22,"col":7},"31":{"ann":"(([GHC.Types.Char], [GHC.Types.Char]) -> [GHC.Types.Char])\n-> ([GHC.Types.Char] -> ([GHC.Types.Char], [GHC.Types.Char]))\n-> [GHC.Types.Char]\n-> exists [([GHC.Types.Char], [GHC.Types.Char])].[GHC.Types.Char]","ident":"_","row":22,"col":31},"45":{"ann":"{v : [[GHC.Types.Char]] | v == dromes && len v >= 0}","ident":"dromes","row":22,"col":45},"16":{"ann":"([GHC.Types.Char] -> [GHC.Types.Char])\n-> x3:[[GHC.Types.Char]]\n-> {v : [[GHC.Types.Char]] | len v == len x3}","ident":"_","row":22,"col":16},"33":{"ann":"[GHC.Types.Char] -> ([GHC.Types.Char], [GHC.Types.Char])","ident":"Main.splitDrome","row":22,"col":33},"21":{"ann":"([GHC.Types.Char], [GHC.Types.Char]) -> [GHC.Types.Char]","ident":"Main.dromeTest","row":22,"col":21}},"19":{"1":{"ann":"{v : (GHC.Types.IO ()) | v == Main.main}","ident":"Main.main","row":19,"col":1}},"12":{"27":{"ann":"GHC.Prim.Addr# -> [GHC.Types.Char]","ident":"GHC.CString.unpackCString#","row":12,"col":27}},"23":{"7":{"ann":"{v : [[GHC.Types.Char]] | len v <= len tested}","ident":"result","row":23,"col":7},"30":{"ann":"([GHC.Types.Char] -> [GHC.Types.Char])\n-> x3:[[GHC.Types.Char]]\n-> {v : [[GHC.Types.Char]] | len v == len x3}","ident":"_","row":23,"col":30},"53":{"ann":"{v : [[GHC.Types.Char]] | v == tested && len v == len dromes && len v >= 0}","ident":"tested","row":23,"col":53},"45":{"ann":"{v : [[GHC.Types.Char]] | v == dromes && len v >= 0}","ident":"dromes","row":23,"col":45},"16":{"ann":"([GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char])\n-> x4:[[GHC.Types.Char]]\n-> x5:[[GHC.Types.Char]]\n-> {v : [[GHC.Types.Char]] | len v <= len x5 && len v <= len x4}","ident":"_","row":23,"col":16},"34":{"ann":"[GHC.Types.Char] -> [GHC.Types.Char]","ident":"Main.removeCRLF","row":23,"col":34},"24":{"ann":"x1:[GHC.Types.Char]\n-> x2:[GHC.Types.Char]\n-> {v : [GHC.Types.Char] | len v == len x1 + len v}","ident":"lq_anf__d1w0","row":23,"col":24}},"16":{"30":{"ann":"x1:[GHC.Types.Char]\n-> x2:[GHC.Types.Char]\n-> {v : [GHC.Types.Char] | len v == len x1 + len v}","ident":"_","row":16,"col":30},"23":{"ann":"x1:[GHC.Types.Char]\n-> x2:[GHC.Types.Char]\n-> {v : [GHC.Types.Char] | len v == len x1 + len v}","ident":"_","row":16,"col":23},"26":{"ann":"{v : [GHC.Types.Char] | null v <=> false && len v >= 0}","ident":"lq_anf__d1vQ","row":16,"col":26},"33":{"ann":"{v : [GHC.Types.Char] | v == y && len v >= 0}","ident":"y","row":16,"col":33},"21":{"ann":"{v : [GHC.Types.Char] | v == x && len v >= 0}","ident":"x","row":16,"col":21}},"20":{"17":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d1vX","row":20,"col":17},"8":{"ann":"[GHC.Types.Char] -> (GHC.Types.IO [GHC.Types.Char])","ident":"_","row":20,"col":8},"3":{"ann":"[GHC.Types.Char]","ident":"f","row":20,"col":3}},"5":{"12":{"ann":"[GHC.Types.Char]","ident":"line","row":5,"col":12},"45":{"ann":"{v : [GHC.Types.Char] | v == line && len v >= 0}","ident":"line","row":5,"col":45},"1":{"ann":"[GHC.Types.Char] -> ([GHC.Types.Char], [GHC.Types.Char])","ident":"Main.splitDrome","row":5,"col":1},"26":{"ann":"[GHC.Types.Char]","ident":"y","row":5,"col":26},"41":{"ann":"{v : [GHC.Types.Char] | null v <=> false && len v >= 0}","ident":"lq_anf__d1vC","row":5,"col":41},"33":{"ann":"[GHC.Types.Char] -> [GHC.Types.Char] -> [[GHC.Types.Char]]","ident":"_","row":5,"col":33},"24":{"ann":"[GHC.Types.Char]","ident":"x","row":5,"col":24}},"11":{"27":{"ann":"GHC.Prim.Addr# -> [GHC.Types.Char]","ident":"GHC.CString.unpackCString#","row":11,"col":27}},"21":{"7":{"ann":"[[GHC.Types.Char]]","ident":"dromes","row":21,"col":7},"22":{"ann":"{v : [GHC.Types.Char] | v == f && len v >= 0}","ident":"f","row":21,"col":22},"16":{"ann":"[GHC.Types.Char] -> [[GHC.Types.Char]]","ident":"_","row":21,"col":16}},"24":{"13":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d1w2","row":24,"col":13},"22":{"ann":"([GHC.Types.Char] -> (GHC.Types.IO ()))\n-> [GHC.Types.Char] -> (GHC.Types.IO ())","ident":"_","row":24,"col":22},"3":{"ann":"[GHC.Types.Char] -> [GHC.Types.Char] -> (GHC.Types.IO ())","ident":"_","row":24,"col":3},"24":{"ann":"[[GHC.Types.Char]] -> [GHC.Types.Char]","ident":"_","row":24,"col":24},"32":{"ann":"{v : [[GHC.Types.Char]] | v == result && len v >= 0 && len v <= len tested}","ident":"result","row":24,"col":32}},"6":{"19":{"ann":"forall a b <p2 :: a b -> Prop>.\nx1:a\n-> x2:{VV : b<p2 x1> | true}\n-> {v : (a, b)<\\x6 VV -> p2 x6> | fst v == x1 && x_Tuple22 v == x2 && snd v == x2 && x_Tuple21 v == x1}","ident":"GHC.Tuple.(,)","row":6,"col":19},"23":{"ann":"{v : [GHC.Types.Char] | v == y && len v >= 0}","ident":"y","row":6,"col":23},"20":{"ann":"{v : [GHC.Types.Char] | v == x && len v >= 0}","ident":"x","row":6,"col":20}},"9":{"51":{"ann":"{v : [GHC.Types.Char] | v == n && len v >= 0}","ident":"n","row":9,"col":51},"36":{"ann":"GHC.Types.Int -> [GHC.Types.Char] -> [[GHC.Types.Char]]","ident":"_","row":9,"col":36},"1":{"ann":"([GHC.Types.Char], [GHC.Types.Char]) -> [GHC.Types.Char]","ident":"Main.dromeTest","row":9,"col":1},"26":{"ann":"[[GHC.Types.Char]]","ident":"chunked","row":9,"col":26},"46":{"ann":"[GHC.Types.Char] -> GHC.Types.Int","ident":"_","row":9,"col":46},"54":{"ann":"{v : [GHC.Types.Char] | v == str && len v >= 0}","ident":"str","row":9,"col":54}},"10":{"25":{"ann":"{v : [[GHC.Types.Char]] | v == chunked && len v >= 0}","ident":"chunked","row":10,"col":25},"36":{"ann":"x1:[[GHC.Types.Char]] -> {v : [[GHC.Types.Char]] | len v == len x1}","ident":"_","row":10,"col":36},"44":{"ann":"{v : [[GHC.Types.Char]] | v == chunked && len v >= 0}","ident":"chunked","row":10,"col":44},"33":{"ann":"x1:[[GHC.Types.Char]]\n-> x2:[[GHC.Types.Char]]\n-> {v : GHC.Types.Bool | Prop v <=> x1 == v}","ident":"_","row":10,"col":33}}},"errors":[]}